----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date: 09.11.2020 13:06:02
-- Design Name: 
-- Module Name: arithmetic_logic - Behavioral
-- Project Name: 
-- Target Devices: 
-- Tool Versions: 
-- Description: 
-- 
-- Dependencies: 
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
-- 
----------------------------------------------------------------------------------


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity arithmetic_logic is
  Port ( A : in  STD_LOGIC_VECTOR (31 downto 0); 
         B : in  STD_LOGIC_VECTOR (31 downto 0); 
        -- G_select : in  STD_LOGIC_VECTOR (4 downto 0); 
         s0 : in  STD_LOGIC;
         s1 : in  STD_LOGIC; 
         c_in : in  STD_LOGIC;                    
         c_out : out  STD_LOGIC;  
         G : out  STD_LOGIC_VECTOR (31 downto 0); 
         V : out  STD_LOGIC
  );
end arithmetic_logic;

architecture Behavioral of arithmetic_logic is



    COMPONENT parallel_adder32
    Port(X : in  STD_LOGIC_VECTOR (31 downto 0);  
        Y : in  STD_LOGIC_VECTOR (31 downto 0);   
        c_in : in  STD_LOGIC;                    
        c_out : out  STD_LOGIC;                  
        G : out  STD_LOGIC_VECTOR (31 downto 0); 
        V : out  STD_LOGIC                       
  ); 
    END COMPONENT;
    
    
    COMPONENT B_inputLogic
    Port ( B : in  STD_LOGIC_VECTOR (31 downto 0);  
       s0 : in  STD_LOGIC;                      
       s1 : in  STD_LOGIC;                      
       Y : out  STD_LOGIC_VECTOR (31 downto 0)  
      );                                                                            
    END COMPONENT;
    
signal Y : std_logic_vector (31 downto 0);

begin
    
    parallelAdder:parallel_adder32 PORT MAP(
        X =>A, 
        Y => Y,  
        c_in =>c_in,                   
        c_out =>c_out,              
        G =>G,
        V =>V       
    );
    
    
    b_input_logic:B_inputLogic PORT MAP(
          B =>B,    
         s0 =>s0,                        
         s1 =>s1,                        
         Y => Y
         );
         
         
end Behavioral;
