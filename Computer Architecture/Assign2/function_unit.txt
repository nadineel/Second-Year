----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date: 11.11.2020 23:43:47
-- Design Name: 
-- Module Name: function_unit - Behavioral
-- Project Name: 
-- Target Devices: 
-- Tool Versions: 
-- Description: 
-- 
-- Dependencies: 
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
-- 
----------------------------------------------------------------------------------


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity function_unit is
  Port ( 
        A : in  STD_LOGIC_VECTOR (31 downto 0);        
        B : in  STD_LOGIC_VECTOR (31 downto 0);
        FS: in  STD_LOGIC_VECTOR (4 downto 0);      
        N: out STD_LOGIC;
        Z: out STD_LOGIC;
        C: out STD_LOGIC;
        V: out STD_LOGIC;
        F : out  STD_LOGIC_VECTOR (31 downto 0)
  );
end function_unit;

architecture Behavioral of function_unit is

    COMPONENT ALU
    Port (  A : in  STD_LOGIC_VECTOR (31 downto 0);        
        B : in  STD_LOGIC_VECTOR (31 downto 0);
        c_in: in STD_LOGIC;
        S : in  STD_LOGIC_VECTOR (2 downto 0);
        c_out: out STD_LOGIC;
        V: out STD_LOGIC;
        G : out  STD_LOGIC_VECTOR (31 downto 0)
  );
    END COMPONENT;
    
    COMPONENT shifter_unit
    Port (  B : in  STD_LOGIC_VECTOR (31 downto 0);
            S : in  STD_LOGIC_VECTOR (1 downto 0);
            H : out  STD_LOGIC_VECTOR (31 downto 0)
         );
    END COMPONENT;
    
    COMPONENT zero_detect
    Port ( G : in  STD_LOGIC_VECTOR (31 downto 0); 
         Z : out  STD_LOGIC
    );
    END COMPONENT;
    
    COMPONENT mux2_32
     Port (s : in  STD_LOGIC;
        in1 : in  STD_LOGIC_VECTOR (31 downto 0);
        in2 : in  STD_LOGIC_VECTOR (31 downto 0);
        z : out  STD_LOGIC_VECTOR (31 downto 0));
    END COMPONENT;
    
    signal alu_out: std_logic_vector(31 downto 0);
    signal shifter_out: std_logic_vector(31 downto 0);
    
begin

    alu1: ALU PORT MAP(
    A =>A,
    B =>B,
    c_in=>FS(0),
    S(0)=>FS(1),
    S(1)=>FS(2),
    S(2)=>FS(3),
    c_out=>C,
    V=>V,
    G=> alu_out 
    );
    
    shift: shifter_unit PORT MAP(
    B=>B,
    S(0)=>FS(2),
    S(1)=>FS(3),
    H=>shifter_out
    );
    
    mux2: mux2_32 PORT MAP(
    s=>FS(4),
    in1=> alu_out,
    in2=> shifter_out,
    z=>F
    );
    
    zero: zero_detect PORT MAP(
    G=>alu_out,
    Z=>Z
    );
    
    N<=alu_out(31); --MSB if 1 will be negative


end Behavioral;
