----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date: 21.12.2020 22:49:15
-- Design Name: 
-- Module Name: mux33_32_tb - testbench
-- Project Name: 
-- Target Devices: 
-- Tool Versions: 
-- Description: 
-- 
-- Dependencies: 
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
-- 
----------------------------------------------------------------------------------


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity mux33_32_tb is
--  Port ( );
end mux33_32_tb;

architecture testbench of mux33_32_tb is

   COMPONENT mux33_32
    PORT (s : in  STD_LOGIC_VECTOR (5 downto 0);
        in0 : in  STD_LOGIC_VECTOR (31 downto 0);
        in1 : in  STD_LOGIC_VECTOR (31 downto 0);
        in2 : in  STD_LOGIC_VECTOR (31 downto 0);
        in3 : in  STD_LOGIC_VECTOR (31 downto 0);
        in4 : in  STD_LOGIC_VECTOR (31 downto 0);
        in5 : in  STD_LOGIC_VECTOR (31 downto 0);
        in6 : in  STD_LOGIC_VECTOR (31 downto 0);
        in7 : in  STD_LOGIC_VECTOR (31 downto 0);
        in8 : in  STD_LOGIC_VECTOR (31 downto 0);
        in9 : in  STD_LOGIC_VECTOR (31 downto 0);
        in10 : in  STD_LOGIC_VECTOR (31 downto 0);
        in11 : in  STD_LOGIC_VECTOR (31 downto 0);
        in12 : in  STD_LOGIC_VECTOR (31 downto 0);
        in13 : in  STD_LOGIC_VECTOR (31 downto 0);
        in14 : in  STD_LOGIC_VECTOR (31 downto 0);
        in15 : in  STD_LOGIC_VECTOR (31 downto 0);
        in16 : in  STD_LOGIC_VECTOR (31 downto 0);
        in17 : in  STD_LOGIC_VECTOR (31 downto 0);
        in18 : in  STD_LOGIC_VECTOR (31 downto 0);
        in19 : in  STD_LOGIC_VECTOR (31 downto 0);
        in20 : in  STD_LOGIC_VECTOR (31 downto 0);
        in21 : in  STD_LOGIC_VECTOR (31 downto 0);
        in22 : in  STD_LOGIC_VECTOR (31 downto 0);
        in23 : in  STD_LOGIC_VECTOR (31 downto 0);
        in24 : in  STD_LOGIC_VECTOR (31 downto 0);
        in25 : in  STD_LOGIC_VECTOR (31 downto 0);
        in26 : in  STD_LOGIC_VECTOR (31 downto 0);
        in27 : in  STD_LOGIC_VECTOR (31 downto 0);
        in28 : in  STD_LOGIC_VECTOR (31 downto 0);
        in29 : in  STD_LOGIC_VECTOR (31 downto 0);
        in30 : in  STD_LOGIC_VECTOR (31 downto 0);
        in31 : in  STD_LOGIC_VECTOR (31 downto 0);
        in32 : in  STD_LOGIC_VECTOR (31 downto 0);
        z : out  STD_LOGIC_VECTOR (31 downto 0));
    END COMPONENT;
    
   --Inputs
   signal s : std_logic_vector(5 downto 0) := (others => '0');
   signal in0 : std_logic_vector(31 downto 0) := (others => '0');
   signal in1 : std_logic_vector(31 downto 0) := (others => '0');
   signal in2 : std_logic_vector(31 downto 0) := (others => '0');
   signal in3 : std_logic_vector(31 downto 0) := (others => '0');
   signal in4 : std_logic_vector(31 downto 0) := (others => '0');
   signal in5 : std_logic_vector(31 downto 0) := (others => '0');
   signal in6 : std_logic_vector(31 downto 0) := (others => '0');
   signal in7 : std_logic_vector(31 downto 0) := (others => '0');
   signal in8 : std_logic_vector(31 downto 0) := (others => '0');
   signal in9 : std_logic_vector(31 downto 0) := (others => '0');
   signal in10 : std_logic_vector(31 downto 0) := (others => '0');
   signal in11 : std_logic_vector(31 downto 0) := (others => '0');
   signal in12 : std_logic_vector(31 downto 0) := (others => '0');
   signal in13 : std_logic_vector(31 downto 0) := (others => '0');
   signal in14 : std_logic_vector(31 downto 0) := (others => '0');
   signal in15 : std_logic_vector(31 downto 0) := (others => '0');
   signal in16 : std_logic_vector(31 downto 0) := (others => '0');
   signal in17 : std_logic_vector(31 downto 0) := (others => '0');
   signal in18 : std_logic_vector(31 downto 0) := (others => '0');
   signal in19 : std_logic_vector(31 downto 0) := (others => '0');
   signal in20 : std_logic_vector(31 downto 0) := (others => '0');
   signal in21 : std_logic_vector(31 downto 0) := (others => '0');
   signal in22 : std_logic_vector(31 downto 0) := (others => '0');
   signal in23 : std_logic_vector(31 downto 0) := (others => '0');
   signal in24 : std_logic_vector(31 downto 0) := (others => '0');
   signal in25 : std_logic_vector(31 downto 0) := (others => '0');
   signal in26 : std_logic_vector(31 downto 0) := (others => '0');
   signal in27 : std_logic_vector(31 downto 0) := (others => '0');
   signal in28 : std_logic_vector(31 downto 0) := (others => '0');
   signal in29 : std_logic_vector(31 downto 0) := (others => '0');
   signal in30 : std_logic_vector(31 downto 0) := (others => '0');
   signal in31 : std_logic_vector(31 downto 0) := (others => '0');
   signal in32 : std_logic_vector(31 downto 0) := (others => '0');
   
   --Outputs
   signal z : std_logic_vector(31 downto 0):= (others => '0'); 
   
   BEGIN
 
	-- Instantiate the Unit Under Test (UUT)
   uut: mux33_32 PORT MAP (
          s => s,
          in0 => in0,
          in1 => in1,
          in2 => in2,
          in3 => in3,
          in4 => in4,
          in5 => in5,
          in6 => in6,
          in7 => in7,
          in8 => in8,
          in9 => in9,
          in10 => in10,
          in11 => in11,
          in12 => in12,
          in13 => in13,
          in14 => in14,
          in15 => in15,
          in16 => in16,
          in17 => in17,
          in18 => in18,
          in19 => in19,
          in20 => in20,
          in21 => in21,
          in22 => in22,
          in23 => in23,
          in24 => in24,
          in25 => in25,
          in26 => in26,
          in27 => in27,
          in28 => in28,
          in29 => in29,
          in30 => in30,
          in31 => in31,
          in32 => in32,  
          z => z
        );  
stim_proc: process
   begin
      in0 <= "10101010101010101010101010101010";		
      in1 <= x"bbbbbbbb";
	  in2 <= x"cccccccc";
	  in3 <= x"dddddddd";
	  in4 <= x"0aaaaaaa";		
      in5 <= x"0bbbbbbb";
	  in6 <= x"0ccccccc";
	  in7 <= x"0ddddddd";
	  in8 <= x"1aaaaaaa";		
      in9 <= x"1bbbbbbb";
	  in10 <= x"1ccccccc";
	  in11 <= x"1ddddddd";
	  in12 <= x"2aaaaaaa";		
      in13 <= x"2bbbbbbb";
	  in14 <= x"2ccccccc";
	  in15 <= x"2ddddddd";
	  in16 <= x"3aaaaaaa";		
      in17 <= x"3bbbbbbb";
	  in18 <= x"3ccccccc";
	  in19 <= x"3ddddddd";
	  in20 <= x"4aaaaaaa";		
      in21 <= x"4bbbbbbb";
	  in22 <= x"4ccccccc";
	  in23 <= x"4ddddddd";
	  in24 <= x"5aaaaaaa";		
      in25 <= x"5bbbbbbb";
	  in26 <= x"5ccccccc";
	  in27 <= x"5ddddddd";
	  in28 <= x"6aaaaaaa";		
      in29 <= x"6bbbbbbb";
	  in30 <= x"6ccccccc";
	  in31 <= x"6ddddddd";
		
      wait for 10 ns;	
        s<="000000";
        	
      wait for 10 ns;    
        s<="000001";
        	
      wait for 10 ns;
        s<="000010";
        	
      wait for 10 ns;
        s<="000011";
        	
      wait for 10 ns;
        s<="000100";
        	
      wait for 10 ns;
        s<="000101";	
      wait for 10 ns;
        	
      wait for 10 ns;
        s<="000110";
        	
      wait for 10 ns;
        s<="000111";	
        
      wait for 10 ns;        
        s<="001000";	
        
      wait for 10 ns;
        s<="001001";	
        
      wait for 10 ns;
        s<="001010";	
        
      wait for 10 ns;
        s<="001011";	
        
      wait for 10 ns;
        s<="001100";	
        
      wait for 10 ns;
        s<="001101";	
        	
      wait for 10 ns;
        s<="001110";	
        
      wait for 10 ns;
        s<="001111";	
        
      wait for 10 ns;
        s<="010000";	
        
      wait for 10 ns;
        s<="010001";	
        
      wait for 10 ns;
        s<="010010";	
        
      wait for 10 ns;
        s<="010011";	
        
      wait for 10 ns;
        s<="010100";	
        
      wait for 10 ns;
        s<="010101";	
        
      wait for 10 ns;
        s<="010110";	
        
      wait for 10 ns;
        s<="010111"; 
        	
      wait for 10 ns;
        s<="011000";	
        
      wait for 10 ns;
        s<="011001";	
        
      wait for 10 ns;
        s<="011010";	
        
      wait for 10 ns;
        s<="011011";	
        
      wait for 10 ns;
        s<="011100";	
        
      wait for 10 ns;
        s<="011101";	
        
      wait for 10 ns;
        s<="011110";	
        
      wait for 10 ns;
        s<="011111";
        
      wait for 10 ns;
        s<="100000";  	
      
     wait;
   end process;

END testbench;

